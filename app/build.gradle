apply plugin: 'com.android.application'

// (Consider removing the repositories block from here if you’ve defined them in your top-level build.gradle)
allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

android {
    compileSdkVersion 33
    // Option 1: Let Gradle choose the build tools version automatically by omitting buildToolsVersion
    // Option 2: Explicitly use a more recent version
    buildToolsVersion "33.0.0"
    
    useLibrary 'org.apache.http.legacy'
    
    defaultConfig {
        applicationId "com.llamacorp.equate"
        // If you want to restrict your app to Android 13 and above:
        minSdkVersion 33
        // Update target SDK to 33
        targetSdkVersion 33

        testApplicationId "com.llamacorp.equate.test"
        // Migrate to AndroidX test runner if possible:
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                          'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    // If you don't have flavors, you can remove the empty productFlavors block.
    // productFlavors {}
}

dependencies {
    // Consider migrating to AndroidX components.
    // For example, Material Components instead of the old design support library:
    implementation 'com.google.android.material:material:1.9.0'
    
    implementation 'junit:junit:4.13.2'
    
    // Use the AndroidX testing libraries:
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    
    // Optional: If you need additional Espresso contrib libraries, verify they’re compatible with AndroidX.
    // implementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    
    // Alternatively, if you stick with the older support libraries, know that some aspects may not work perfectly on API 33.
    // (Update versions if continuing to use them.)
}
